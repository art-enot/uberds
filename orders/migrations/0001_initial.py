# Generated by Django 5.0.6 on 2024-06-21 09:22

import django.db.models.deletion
import tinymce.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Наименование заказ-наряда')),
                ('name_choise', models.CharField(max_length=200, verbose_name='Наименование процедуры выбора')),
                ('job_object', models.CharField(max_length=200, verbose_name='Объект выполнения работ / оказания услуг')),
                ('rnp_number', models.CharField(max_length=200, verbose_name='Реестровый номер процедуры (РНП)')),
                ('start_drilling_date', models.CharField(max_length=200, verbose_name='Сроки начала бурения 1 скважины')),
                ('mobilization_period', models.CharField(max_length=200, verbose_name='Сроки мобилизации')),
                ('service_period', models.CharField(max_length=200, verbose_name='Период оказания услуг')),
                ('max_posts', models.CharField(max_length=200, verbose_name='Ориентировочное max количество постов')),
                ('order_сonditions', tinymce.models.HTMLField(blank=True, null=True, verbose_name='Описание условий')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Наряд-заказ',
                'verbose_name_plural': 'Наряд-заказы',
            },
        ),
        migrations.CreateModel(
            name='autonomicNns',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diameter', models.CharField(max_length=50, verbose_name='Диаметр долота, мм.')),
                ('unit', models.CharField(max_length=50, verbose_name='Единица измерения')),
                ('standard', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Норматив на скважину, м')),
                ('cost_per_unit', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Стоимость за ед. изм., руб./м')),
                ('quantity_well2022', models.IntegerField(verbose_name='Кол-во скважин (2022г.)')),
                ('quantity_m2022', models.IntegerField(verbose_name='Кол-во всего, метры (2022г.)')),
                ('price2022', models.IntegerField(verbose_name='Стоимость за ед.изм., руб./м(2022г.)')),
                ('price_all2022', models.IntegerField(verbose_name='Стоимость всего, руб.(2022г.)')),
                ('quantity_well2023', models.IntegerField(verbose_name='Кол-во скважин (2023г.)')),
                ('quantity_m2023', models.IntegerField(verbose_name='Кол-во всего, метры (2023г.)')),
                ('price2023', models.IntegerField(verbose_name='Стоимость за ед.изм., руб./м(2023г.)')),
                ('price_all2023', models.IntegerField(verbose_name='Стоимость всего, руб.(2023г.)')),
                ('quantity_well2024', models.IntegerField(verbose_name='Кол-во скважин (2024г.)')),
                ('quantity_m2024', models.IntegerField(verbose_name='Кол-во всего, метры (2024г.)')),
                ('price2024', models.IntegerField(verbose_name='Стоимость за ед.изм., руб./м(2024г.)')),
                ('price_all2024', models.IntegerField(verbose_name='Стоимость всего, руб.(2024г.)')),
                ('quantity_well2025', models.IntegerField(verbose_name='Кол-во скважин (2025г.)')),
                ('quantity_m2025', models.IntegerField(verbose_name='Кол-во всего, метры (2025г.)')),
                ('price2025', models.IntegerField(verbose_name='Стоимость за ед.изм., руб./м(2025г.)')),
                ('price_all2025', models.IntegerField(verbose_name='Стоимость всего, руб.(2025г.)')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='autonomic_nns', to='orders.order')),
            ],
            options={
                'verbose_name': 'ННС (Автономные м/р)',
                'verbose_name_plural': 'ННС (Автономные м/р)',
            },
        ),
        migrations.CreateModel(
            name='autonomicGsPilot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diameter', models.CharField(max_length=50, verbose_name='Диаметр долота, мм.')),
                ('unit', models.CharField(max_length=50, verbose_name='Единица измерения')),
                ('standard', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Норматив на скважину, м')),
                ('cost_per_unit', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Стоимость за ед. изм., руб./м')),
                ('quantity_well2022', models.IntegerField(verbose_name='Кол-во скважин (2022г.)')),
                ('quantity_m2022', models.IntegerField(verbose_name='Кол-во всего, метры (2022г.)')),
                ('price2022', models.IntegerField(verbose_name='Стоимость за ед.изм., руб./м(2022г.)')),
                ('price_all2022', models.IntegerField(verbose_name='Стоимость всего, руб.(2022г.)')),
                ('quantity_well2023', models.IntegerField(verbose_name='Кол-во скважин (2023г.)')),
                ('quantity_m2023', models.IntegerField(verbose_name='Кол-во всего, метры (2023г.)')),
                ('price2023', models.IntegerField(verbose_name='Стоимость за ед.изм., руб./м(2023г.)')),
                ('price_all2023', models.IntegerField(verbose_name='Стоимость всего, руб.(2023г.)')),
                ('quantity_well2024', models.IntegerField(verbose_name='Кол-во скважин (2024г.)')),
                ('quantity_m2024', models.IntegerField(verbose_name='Кол-во всего, метры (2024г.)')),
                ('price2024', models.IntegerField(verbose_name='Стоимость за ед.изм., руб./м(2024г.)')),
                ('price_all2024', models.IntegerField(verbose_name='Стоимость всего, руб.(2024г.)')),
                ('quantity_well2025', models.IntegerField(verbose_name='Кол-во скважин (2025г.)')),
                ('quantity_m2025', models.IntegerField(verbose_name='Кол-во всего, метры (2025г.)')),
                ('price2025', models.IntegerField(verbose_name='Стоимость за ед.изм., руб./м(2025г.)')),
                ('price_all2025', models.IntegerField(verbose_name='Стоимость всего, руб.(2025г.)')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='autonomic_gs_pilot', to='orders.order')),
            ],
            options={
                'verbose_name': 'ГС + Пилот (Автономные м/р)',
                'verbose_name_plural': 'ГС + Пилот (Автономные м/р)',
            },
        ),
        migrations.CreateModel(
            name='autonomicGs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diameter', models.CharField(max_length=50, verbose_name='Диаметр долота, мм.')),
                ('unit', models.CharField(max_length=50, verbose_name='Единица измерения')),
                ('standard', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Норматив на скважину, м')),
                ('cost_per_unit', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Стоимость за ед. изм., руб./м')),
                ('quantity_well2022', models.IntegerField(verbose_name='Кол-во скважин (2022г.)')),
                ('quantity_m2022', models.IntegerField(verbose_name='Кол-во всего, метры (2022г.)')),
                ('price2022', models.IntegerField(verbose_name='Стоимость за ед.изм., руб./м(2022г.)')),
                ('price_all2022', models.IntegerField(verbose_name='Стоимость всего, руб.(2022г.)')),
                ('quantity_well2023', models.IntegerField(verbose_name='Кол-во скважин (2023г.)')),
                ('quantity_m2023', models.IntegerField(verbose_name='Кол-во всего, метры (2023г.)')),
                ('price2023', models.IntegerField(verbose_name='Стоимость за ед.изм., руб./м(2023г.)')),
                ('price_all2023', models.IntegerField(verbose_name='Стоимость всего, руб.(2023г.)')),
                ('quantity_well2024', models.IntegerField(verbose_name='Кол-во скважин (2024г.)')),
                ('quantity_m2024', models.IntegerField(verbose_name='Кол-во всего, метры (2024г.)')),
                ('price2024', models.IntegerField(verbose_name='Стоимость за ед.изм., руб./м(2024г.)')),
                ('price_all2024', models.IntegerField(verbose_name='Стоимость всего, руб.(2024г.)')),
                ('quantity_well2025', models.IntegerField(verbose_name='Кол-во скважин (2025г.)')),
                ('quantity_m2025', models.IntegerField(verbose_name='Кол-во всего, метры (2025г.)')),
                ('price2025', models.IntegerField(verbose_name='Стоимость за ед.изм., руб./м(2025г.)')),
                ('price_all2025', models.IntegerField(verbose_name='Стоимость всего, руб.(2025г.)')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='autonomic_gs', to='orders.order')),
            ],
            options={
                'verbose_name': 'ГС (Автономные м/р)',
                'verbose_name_plural': 'ГС (Автономные м/р)',
            },
        ),
        migrations.CreateModel(
            name='OrderFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='orders/', verbose_name='Прикрепленный файл')),
                ('name', models.CharField(max_length=200, verbose_name='Наименование файла')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='orders.order')),
            ],
            options={
                'verbose_name': 'Файл',
                'verbose_name_plural': 'Файлы',
            },
        ),
        migrations.CreateModel(
            name='roadGs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diameter', models.CharField(max_length=50, verbose_name='Диаметр долота, мм.')),
                ('unit', models.CharField(max_length=50, verbose_name='Единица измерения')),
                ('standard', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Норматив на скважину, м')),
                ('cost_per_unit', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Стоимость за ед. изм., руб./м')),
                ('quantity_well2022', models.IntegerField(verbose_name='Кол-во скважин (2022г.)')),
                ('quantity_m2022', models.IntegerField(verbose_name='Кол-во всего, метры (2022г.)')),
                ('price2022', models.IntegerField(verbose_name='Стоимость за ед.изм., руб./м(2022г.)')),
                ('price_all2022', models.IntegerField(verbose_name='Стоимость всего, руб.(2022г.)')),
                ('quantity_well2023', models.IntegerField(verbose_name='Кол-во скважин (2023г.)')),
                ('quantity_m2023', models.IntegerField(verbose_name='Кол-во всего, метры (2023г.)')),
                ('price2023', models.IntegerField(verbose_name='Стоимость за ед.изм., руб./м(2023г.)')),
                ('price_all2023', models.IntegerField(verbose_name='Стоимость всего, руб.(2023г.)')),
                ('quantity_well2024', models.IntegerField(verbose_name='Кол-во скважин (2024г.)')),
                ('quantity_m2024', models.IntegerField(verbose_name='Кол-во всего, метры (2024г.)')),
                ('price2024', models.IntegerField(verbose_name='Стоимость за ед.изм., руб./м(2024г.)')),
                ('price_all2024', models.IntegerField(verbose_name='Стоимость всего, руб.(2024г.)')),
                ('quantity_well2025', models.IntegerField(verbose_name='Кол-во скважин (2025г.)')),
                ('quantity_m2025', models.IntegerField(verbose_name='Кол-во всего, метры (2025г.)')),
                ('price2025', models.IntegerField(verbose_name='Стоимость за ед.изм., руб./м(2025г.)')),
                ('price_all2025', models.IntegerField(verbose_name='Стоимость всего, руб.(2025г.)')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='road_gs', to='orders.order')),
            ],
            options={
                'verbose_name': 'ГС (м/р с круглогодичным дорожным сообщением)',
                'verbose_name_plural': 'ГС (м/р с круглогодичным дорожным сообщением)',
            },
        ),
        migrations.CreateModel(
            name='roadGsPilot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diameter', models.CharField(max_length=50, verbose_name='Диаметр долота, мм.')),
                ('unit', models.CharField(max_length=50, verbose_name='Единица измерения')),
                ('standard', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Норматив на скважину, м')),
                ('cost_per_unit', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Стоимость за ед. изм., руб./м')),
                ('quantity_well2022', models.IntegerField(verbose_name='Кол-во скважин (2022г.)')),
                ('quantity_m2022', models.IntegerField(verbose_name='Кол-во всего, метры (2022г.)')),
                ('price2022', models.IntegerField(verbose_name='Стоимость за ед.изм., руб./м(2022г.)')),
                ('price_all2022', models.IntegerField(verbose_name='Стоимость всего, руб.(2022г.)')),
                ('quantity_well2023', models.IntegerField(verbose_name='Кол-во скважин (2023г.)')),
                ('quantity_m2023', models.IntegerField(verbose_name='Кол-во всего, метры (2023г.)')),
                ('price2023', models.IntegerField(verbose_name='Стоимость за ед.изм., руб./м(2023г.)')),
                ('price_all2023', models.IntegerField(verbose_name='Стоимость всего, руб.(2023г.)')),
                ('quantity_well2024', models.IntegerField(verbose_name='Кол-во скважин (2024г.)')),
                ('quantity_m2024', models.IntegerField(verbose_name='Кол-во всего, метры (2024г.)')),
                ('price2024', models.IntegerField(verbose_name='Стоимость за ед.изм., руб./м(2024г.)')),
                ('price_all2024', models.IntegerField(verbose_name='Стоимость всего, руб.(2024г.)')),
                ('quantity_well2025', models.IntegerField(verbose_name='Кол-во скважин (2025г.)')),
                ('quantity_m2025', models.IntegerField(verbose_name='Кол-во всего, метры (2025г.)')),
                ('price2025', models.IntegerField(verbose_name='Стоимость за ед.изм., руб./м(2025г.)')),
                ('price_all2025', models.IntegerField(verbose_name='Стоимость всего, руб.(2025г.)')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='road_gs_pilot', to='orders.order')),
            ],
            options={
                'verbose_name': 'ГС + Пилот (м/р с круглогодичным дорожным сообщением)',
                'verbose_name_plural': 'ГС + Пилот (м/р с круглогодичным дорожным сообщением)',
            },
        ),
        migrations.CreateModel(
            name='roadNns',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diameter', models.CharField(max_length=50, verbose_name='Диаметр долота, мм.')),
                ('unit', models.CharField(max_length=50, verbose_name='Единица измерения')),
                ('standard', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Норматив на скважину, м')),
                ('cost_per_unit', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Стоимость за ед. изм., руб./м')),
                ('quantity_well2022', models.IntegerField(verbose_name='Кол-во скважин (2022г.)')),
                ('quantity_m2022', models.IntegerField(verbose_name='Кол-во всего, метры (2022г.)')),
                ('price2022', models.IntegerField(verbose_name='Стоимость за ед.изм., руб./м(2022г.)')),
                ('price_all2022', models.IntegerField(verbose_name='Стоимость всего, руб.(2022г.)')),
                ('quantity_well2023', models.IntegerField(verbose_name='Кол-во скважин (2023г.)')),
                ('quantity_m2023', models.IntegerField(verbose_name='Кол-во всего, метры (2023г.)')),
                ('price2023', models.IntegerField(verbose_name='Стоимость за ед.изм., руб./м(2023г.)')),
                ('price_all2023', models.IntegerField(verbose_name='Стоимость всего, руб.(2023г.)')),
                ('quantity_well2024', models.IntegerField(verbose_name='Кол-во скважин (2024г.)')),
                ('quantity_m2024', models.IntegerField(verbose_name='Кол-во всего, метры (2024г.)')),
                ('price2024', models.IntegerField(verbose_name='Стоимость за ед.изм., руб./м(2024г.)')),
                ('price_all2024', models.IntegerField(verbose_name='Стоимость всего, руб.(2024г.)')),
                ('quantity_well2025', models.IntegerField(verbose_name='Кол-во скважин (2025г.)')),
                ('quantity_m2025', models.IntegerField(verbose_name='Кол-во всего, метры (2025г.)')),
                ('price2025', models.IntegerField(verbose_name='Стоимость за ед.изм., руб./м(2025г.)')),
                ('price_all2025', models.IntegerField(verbose_name='Стоимость всего, руб.(2025г.)')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='road_nns', to='orders.order')),
            ],
            options={
                'verbose_name': 'ННС (м/р с круглогодичным дорожным сообщением)',
                'verbose_name_plural': 'ННС (м/р с круглогодичным дорожным сообщением)',
            },
        ),
    ]
